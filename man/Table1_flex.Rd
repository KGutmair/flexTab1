% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_Tab1.R
\name{Table1_flex}
\alias{Table1_flex}
\title{Generate Table 1 with Customizable Summary Measures}
\usage{
Table1_flex(
  data,
  variables,
  group_var = FALSE,
  treatment_arm = FALSE,
  new_line = FALSE,
  measures_cat = c("absolute", "relative"),
  measures_num = c("median", "min", "max"),
  display_pvalue = FALSE,
  display_smd = FALSE,
  display_missings = TRUE,
  flextable_output = TRUE,
  sort_rows = NULL,
  add_measure_ident = TRUE,
  treatment_order = NULL,
  group_order = NULL
)
}
\arguments{
\item{data}{A \code{data.frame} containing the data for which the Table 1 should be generated}

\item{variables}{A character vector specifying the names of the variables for which the Table 1 summary should be created.}

\item{group_var}{A character string specifying the name of the grouping variable for stratifying the Table 1 output.
If set to \code{FALSE} (default), the Table 1 will not be stratified by groups.}

\item{treatment_arm}{A character string specifying the variable of the superior for comparing nested groups within superior groups.
For example, in a dataset with three treatment groups ("treatment": A, B, C) and two subgroups within each
treatment ("sub_group": I, II), set \code{group_var} to "sub_group" and \code{treatment_arm} to "treatment".
If p-values or SMD options are selected, the subgroups within the treatment groups will be compared.
Default is \code{FALSE} if no treatment arms are used.}

\item{new_line}{logical (TRUE/FALSE), default is \code{FALSE}. If \code{TRUE}, an empty row will be added after every variable
in the table, which can improve clarity, especially when returning the Table 1 as a flextable object.}

\item{measures_cat}{A character vector indicating how categorical variables should be summarized. Options are
\code{"absolute"}, \code{"relative"}, or both. Default is \code{c("absolute", "relative")} for displaying both absolute and
relative frequencies.}

\item{measures_num}{A character vector defining the summary statistics for numeric variables. Options include \code{"median"},
\code{"min"}, \code{"max"}, \code{"quantile1"} (25th percentile), \code{"quantile3"} (75th percentile), \code{"mean"}, and \code{"sd"}
(standard deviation). If the output is a data frame, any combination of measures can be selected. If the output is a
flextable object, the number of measures is limited to three (e.g., mean(sd), median(min-max), or
median(quantile1-quantile3)).}

\item{display_pvalue}{logical (TRUE/FALSE), default is \code{FALSE}. If \code{TRUE}, p-values will be calculated and displayed.}

\item{display_smd}{logical (TRUE/FALSE), default is \code{FALSE}. If \code{TRUE}, standardized mean differences (SMD)
will be calculated and displayed.}

\item{display_missings}{A logical (TRUE/FALSE), default is \code{FALSE}. If \code{TRUE}, the frequency of missing values for
each variable will be shown in the output.}

\item{flextable_output}{A logical (TRUE/FALSE), default is \code{TRUE}. If \code{TRUE}, the Table 1 will be returned as a
flextable object. If \code{FALSE}, it will be returned as a \code{data.frame}.}

\item{sort_rows}{A character vector specifying the order in which the variables should appear in the output table.
The default is NULL, which will sort the variables alphabetically}

\item{add_measure_ident}{A logical (TRUE/FALSE), default is \code{TRUE}. If TRUE, the summary measures identifiers, e.g. median (min-max),
mean (sd), n (\%) will be added to the Table 1.}

\item{treatment_order}{character vector. If the varaible treatment_arm was specified, then
with this argument one can set the desired order of the colums of the treatment arms in the output table.
This character vector contains the categories of the treatment_arm variable in the desirered order.}

\item{group_order}{character vector. If the varaible group_var was specified, then
with this argument one can set the desired order of the colums of the grouping variables in the output table.
This character vector contains the categories of the grouping variable in the desirered order.}
}
\value{
A \code{data.frame} or \code{flextable} object, depending on the selected output option.
The returned Table 1 contains the summary measures specified in the input parameters,
including any chosen statistics, p-values, standardized mean differences (SMD), and missing value frequencies.
}
\description{
This function creates a highly flexible Table 1 for descriptive statistics,
allowing users to customize output format, choose summary measures, and
optionally display missing values, p-values (testing for difference between two groups),
and standardized mean differences (SMD). It is designed to adapt to various
reporting needs and ensures comprehensive data summaries in a user-friendly format.
}
\examples{
if (requireNamespace("dplyr", quietly = TRUE) && requireNamespace("survival", quietly = TRUE)) {
  library(dplyr)
  # Load pbc data from the survival package
  pbc <- survival::pbc

  baseline_var <- c("age", "chol", "sex", "stage", "platelet")

  pbc <- pbc \%>\%
    mutate_at(c("stage", "trt", "edema", "hepato"), function(x) as.factor(x)) \%>\%
    filter(!is.na(trt)) \%>\%
    mutate(trt = ifelse(trt == "1", "D-penicillmain", "Placebo"))

  # Table 1 for one group -------------------------------------------

  tab1_ex <- Table1_flex(
    data = pbc,
    variables = baseline_var
  )
  flextable::autofit(tab1_ex)

  # Returning a data.frame for further processing
  # and other summary measures

  Table1_flex(
    data = pbc,
    variables = baseline_var,
    measures_num = c("mean", "sd"),
    measures_cat = "relative"
  )


  # Table 1 for two groups -----------------------------------------
  # showing additionally missing values and p-vales

  tab1_ex <- Table1_flex(
    data = pbc,
    variables = baseline_var,
    group_var = "trt",
    add_measure_ident = TRUE,
    sort_rows = c("age", "sex", "stage", "chol", "platelet")
  )

  flextable::autofit(tab1_ex)


  # Table 1 for a nested group structure ----------------------------

  baseline_var <- c("age", "chol", "platelet", "stage")
  tab1_ex <- Table1_flex(
    data = pbc,
    variables = baseline_var,
    group_var = "sex",
    treatment_arm = "trt",
    add_measure_ident = TRUE,
    sort_rows = c("age", "stage", "chol", "platelet"),
    flextable_output = TRUE
  )

  flextable::autofit(tab1_ex)
}

}
